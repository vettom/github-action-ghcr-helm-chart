name: Helm Publish

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  helm:
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
      # - name: Install Helm
      #   uses: azure/setup-helm@v4.2.0
      
      # - name: Perform Helm lint
      #   run: helm lint .

      # - name: Extract chart name and version
      #   id: extract-chart-info
      #   run: |
      #     CHART_NAME=$(yq e '.name' ./Chart.yaml)
      #     CHART_VERSION=$(yq e '.version' ./Chart.yaml)
      #     echo "CHART_NAME=${CHART_NAME}" >> $GITHUB_ENV
      #     echo "CHART_VERSION=${CHART_VERSION}" >> $GITHUB_ENV
          
      # - name: Ensure Readme updated for version
      #   run: |
      #     if grep ${{ env.CHART_VERSION }} README.md ; then
      #       echo "INFO : Readme contains version entry"
      #     else:
      #       echo "FAILURE: README.md must contain version details."
      #       exit 1
      #     fi

      # - name: Create Helm package
      #   run: |
      #     helm package .
          
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GHCR_TOKEN }}
      # - name: Push chart to github registry
      #   run: | 
      #     helm push "${{ env.CHART_NAME }}-${{ env.CHART_VERSION }}.tgz" oci://ghcr.io/vettom/
